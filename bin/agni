#!/usr/bin/env node

import { dirname, resolve } from 'path';

import { Command } from 'commander';
import chalk from 'chalk';
import { createRequire } from 'module';
import { fileURLToPath } from 'url';
import { readFileSync } from 'fs';

const require = createRequire(import.meta.url);
const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const pkg = require('../package.json');
const bannerLocation = resolve(__dirname, 'banner.txt');
const bannerData = readFileSync(bannerLocation, 'utf-8');

const program = new Command();

program
  .version(pkg.version)
  .description('Gerador moderno de BFF com suporte para Express e Koa')
  .argument('<project-name>', 'Nome do projeto')
  .option('-f, --framework <framework>', 'Framework a ser usado (express|koa)', 'express')
  .option('-p, --port <port>', 'Porta do servidor', '3000')
  .option('-d, --database <database>', 'Tipo de banco de dados (mongodb|postgresql|mysql)')
  .option('--typescript', 'Usar TypeScript', true)
  .option('--tests', 'Incluir testes', true)
  .option('--docker', 'Incluir Dockerfile', false)
  .parse(process.argv);

const options = program.opts();
const [projectName] = program.args;

if (!process.argv.slice(2).length) {
  console.log();
  console.log(chalk.yellow(bannerData));
  console.log();
  program.help();
}

import('../dist/index.js')
  .then(module => {
    module.default(projectName, options);
  })
  .catch(err => {
    console.error('Erro ao executar o comando:', err);
    process.exit(1);
  });
